
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String   @unique
  password  String
  profile_picture String @default("profile")
  description String @default("")
    bookmarks       Bookmark[]
  posts     posts[]
  followers Follows[]

}



model posts{
  id        String   @id @default(cuid())
  userId    String
  Author    String
  title     String
  description String
  imageUrl  String
  content   String
  user      user     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
  postCategories PostCategory[]
  bookmarks       Bookmark[]
  comments  comments[]
  likes     Int      @default(0)
  @@index(userId)
}


model comments{
  id        String   @id @default(cuid())
  userId    String
  postId    String
  content   String
  post      posts    @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index(postId)
}

model Follows{
  id        String   @id @default(cuid())
  userId    String
  followerId String
  user      user     @relation(fields: [userId], references: [id])
  @@index(userId)

}

model Bookmark {
  userId  String
  postId  String
  user    user   @relation(fields: [userId], references: [id])
  post    posts   @relation(fields: [postId], references: [id])
  @@id([userId, postId])
}
model Category {
  id            String         @id @default(cuid())
  name          String
  postCategories PostCategory[]
}



model PostCategory {
  postId    String
  post      posts    @relation(fields: [postId], references: [id])
  categoryId String
  category  Category @relation(fields: [categoryId], references: [id])
  createdAt DateTime @default(now())

  @@id([postId, categoryId])
}
